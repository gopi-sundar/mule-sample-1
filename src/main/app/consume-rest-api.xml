<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <flow name="getUnitedFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/united" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code == empty  ? 'SFO' : message.inboundProperties.'http.query.params'.code]" doc:name="Variable"/>
        <http:request config-ref="United_REST_API_Configuration" path="/essentials/united/flights/{destination}" method="GET" doc:name="United REST request">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.code]"/>
            </http:request-builder>
        </http:request>
        <set-variable variableName="x" value="#[1/0]" doc:name="Variable"/>
        <logger message="HTTP status: #[message.inboundProperties] || MessageBody: #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getUnitedChoiceRouter">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/unitedchoice" allowedMethods="GET" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.query.params'.id == 1]">
                <set-payload value="You hit the first route" doc:name="Set Payload 1"/>
            </when>
            <when expression="#[message.inboundProperties.'http.query.params'.id == 2]">
                <set-payload value="You hit the second route" doc:name="Set Payload 2"/>
            </when>
            <otherwise>
                <set-payload value="You hit the default route " doc:name="Set Payload"/>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="Error occured while executing expression #[exception]" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="scatterGatherExample">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/scattergather" doc:name="HTTP"/>
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <set-payload value="123" doc:name="Set Payload"/>
                <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
            </processor-chain>
            <processor-chain>
                <set-payload value="456" doc:name="Set Payload"/>
                <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
            </processor-chain>
            <processor-chain>
                <set-payload value="789" doc:name="Set Payload"/>
                <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
            </processor-chain>
        </scatter-gather>
        <logger level="INFO" doc:name="Logger"/>
        <object-to-string-transformer doc:name="Object to String"/>
    </flow>
    <flow name="filterExample">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/filterexample" doc:name="HTTP"/>
        <set-payload value="hELLO WORLD" doc:name="Set Payload"/>
        <payload-type-filter expectedType="java.lang.Integer" doc:name="Payload"/>
    </flow>
    <flow name="validationExample">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/validation" doc:name="HTTP"/>
        <validation:is-not-empty message="Payload is empty" value="#[payload]" doc:name="Validation"/>
        <set-payload value="#[validator.validateEmail()]" doc:name="Set Payload"/>
    </flow>
    
</mule>
